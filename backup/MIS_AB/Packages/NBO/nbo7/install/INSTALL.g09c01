
----------------------------------------
Gaussian-09 C.01/NBO7 Installation Guide
----------------------------------------

The following describes the steps required to build an NBO7-compatible
Gaussian-09 C.01 executable.  You must have access to the source
distribution for G09.  Both source and binary distributions of NBO7
support the interface to G09 C.01.

NBO7 communicates with G09 via an external program interface beginning
with G09 D.01.  See INSTALL.g09d01 for instructions for installing
NBO7 with G09 D.01 or E.01.

The following lists the possible combinations of G09 and NBO7
distributions that are supported:

------------------------------------------------------------------
     NBO7           Gaussian-09 C.01      Gaussian-09 D.01 or E.01
 distribution      binary      source        binary      source
------------------------------------------------------------------
    binary           no          yes           yes         yes
    source           no          yes           yes         yes
------------------------------------------------------------------

See INSTALL.g09d01 for instructions for G09 D.01 or E.01.

Gaussian-09 consists of a set of executables (links), including Link
607 (l607.exe), the 1990's vintage NBO 3.1.  Interfacing NBO7 to G09
C.01 requires that you rebuild l607.exe after replacing the l607.F
source file of the G09 distribution by a l607.F file from the NBO7
distribution.  The NBO7 l607.exe that you build serves as a
message-passing interface between host G09 and client NBO7 programs.

It is critical that G09 and NBO7 use a consistent integer length
(either i4 or i8), otherwise the message-passing interface to NBO7
will fail.  If G09 is compiled with 32-bit integers (i4), l607.exe
must likewise be built with 32-bit integers, and the NBOEXE
environment variable must identify the directory path to and filename
of the 32-bit NBO7 executable (nbo7.i4.exe).  If G09 is instead
compiled with 64-bit integers (i8), l607.exe must be built with 64-bit
integers and NBOEXE should identify the 64-bit NBO7 executable
(nbo7.i8.exe).

If uncertain which integer length should be employed, choose one
(either i4 or i8).  Build G09, set the NBOEXE environment variable
appropriately, and run a test calculation with NBO.  If NBO fails,
you've likely selected the wrong integer length.  Rebuild G09 with the
appropriate integer length.  See step 2 and 4 below for details
relating to integer length.


Complete the following steps to install NBO7 in G09 C01.  We describe
here the installation for 32-bit G09 (i4).  If installing with 64-bit
G09, replace every 'i4' in the following by 'i8'.

1.  Build G09 as described by that program's installation
    instructions.  Ensure that G09 executes without error before
    attempting to install NBO7.

2.  [If you have a binary NBO7 distribution, you should skip to step
    4.]  Go to the top-level directory of the NBO7 source
    distribution.  Edit Make.config.  Ensure that the following
    variables are set appropriately for your environment.

    FC = gfortran
    CC = gcc
    INT = i4                 ! i4 or i8
    OS = linux               ! your operating system
    NBODIR = /path/to/nbo7   ! path to top-level directory
    BLAS = false             ! true, if you want NBO to use BLAS
    BLASLIB = -L/usr/local/lib -lblas
    STATIC = false
    FTNCHEK = false
    FLUSH = false

    The Fortran compiler selected need not be the same as that used to
    compile G09.

3.  Type 'make' in the NBO7 top-level directory to build the NBO7
    client program.  Make will also prepare the replacement L607.F
    source code for G09 and compile the message-passing routines.

4.  At least three files should exist at this point in the nbo7/bin
    directory.  These include nbo7.i4.exe (the NBO7 executable),
    g09nbo.i4.F (the replacement L607.F code for G09), and nbhost.o
    (object code for socket-pair communication between G09 and NBO7).

    Replace the l607.F file of the G09 source directory by the
    g09nbo.i4.F file of the nbo7/bin directory, e.g.,

    cp /path/to/nbo7/bin/g09nbo.i4.F $g09root/g09/l607.F

    Also, make a subdirectory called nbo7 and copy the nbhost.o file
    from step 3 into this subdirectory.

    mkdir $g09root/g09/nbo7
    cp /path/to/nbo7/bin/nbhost.o $g09root/g09/nbo7/nbhost.o

5.  Go to the G09 bsd subdirectory (cd $g09root/g09/bsd) and determine
    which makefile is used to build G09.  Note that g09.make is a
    symbolic link to this makefile:

    cd $g09root/g09/bsd
    ls -l g09.make

    For example, on an i386 machine, g09.make is linked to i386.make.

    Edit the makefile (e.g., edit i386.make on an i386 machine) and
    search for the section of the file that builds the l607.a library
    (search for 'l607.a:').  Ensure that the last two lines of this
    section read:

    $(RUNAR) rlv l607.a nbo7/nbhost.o
    $(RUNRAN) l607.a

    Note that you will have to insert the first of these two lines
    into the section.  The first character of this line MUST be a tab
    character, NOT spaces!!

    This section of the makefile compiles the l607.F source code and
    stores the resulting object code into a library called l607.a.
    The line that you insert ensures that the nbhost.o object code (in
    $g09root/g09/nbo7) is included in the l607.a library.

6.  Return to the G09 source directory, discard the old l607.a and
    l607.exe files, and rebuild G09.  You can either rebuild the
    entire G09 program using bsd/bldg09, or rebuild just l607.exe
    using 'mg l607.exe', e.g.,

    cd $g09root/g09
    rm -f l607.a
    rm -f l607.exe
    bsd/install
    source bsd/g09.login
    mg l607.exe
    chmod 750 l607.exe

    The resulting G09 executable (l607.exe) is NBO7-compatible.

7.  Modify the script that you use for G09 calculations to set the
    NBOEXE environment variable to give the path and filename of the
    NBO7 executable, e.g.,

    setenv NBOEXE /path/to/nbo7/bin/nbo7.i4.exe

    If NBOEXE is not set appropriately, l607.exe will fail and report
    that the NBO7 program cannot by found.

    You may optionally set the environment variable NBOFIL to specify
    the default filename for the external files used by NBO7.  For
    example,

    setenv NBOFIL myjob

    will set the filename to 'myjob' (e.g., myjob.48, myjob.47, etc.)
    Otherwise, the default filename is 'FILE'.

8.  Sample Gaussian input (.com) and output (.arc) files are provided
    in /path/to/nbo7/tests/gaussian.

    Note: The pop=nbo6, pop=nbo6read, and pop=nbo6del keywords in the
    sample input files should be replaced by pop=nbo, pop=nboread, and
    pop=nbodel for G09.C01/NBO7.


Eric Glendening (glendening@indstate.edu) maintains the G09/NBO
interface.  Contact him if you encounter problems with this
installation.

Last updated: 21-Apr-2019
